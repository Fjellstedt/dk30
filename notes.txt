TODO:

	First Week
		Bucket:
		- Resource loading (platform) to hold references to Models (app side). (IMPORTANT)
			- Resource loaded and checked by some entity. This in turn tells the renderer to map the gfx. This call will need a ref. to the
			temporary frame memory buffer.

	Next Time:
		- Creating a cube with texture.
		- Resource management and DX mapping. (If time)

	Second Week:
		- Quaternions.
			https://www.3dgep.com/understanding-quaternions/
		- Hot reloading shaders.
		- Creating own model format.
			- Enable texturing different faces. (If time).

	Bucket:
		- Remove textures and models, replace with own file format.

"After this project" - bucket:
	- Look into performance measurements (i.e measuring the cycles per instruction and displaying them to test diff. algorithms perf).

Resources:
	General:
		- Game Engine Architecture 2nd edition.
	Hot reloading:
		- https://www.youtube.com/watch?v=WMSBRk5WG58
		- https://www.youtube.com/watch?v=oijEnriqqcs
	DX11 Rendering:
		- http://www.rastertek.com/tutdx11.html
		- 3D Math Primer for Graphics and Game Development.
		- Linjär Algebra - Jonas Månsson & Patrik Nordbeck.
	Rendering Architecture
		- https://www.youtube.com/watch?v=0nTDFLMLX9k : Perform visibility checks on game objects that then turns into draw calls for the renderer (super smart)

Learnings:
- Look into hot reloading dlls and experiment with building whilst debugging (Extra). [X]
		(This req. us to have two instances of VS running, one for text editing and one for coding)
		NOTE(pf): This requires quiet a few settings to be functional within the Visual Studio environment.
			- You need to randomly generate the name for your pdb since vs is locking that file.
			- You should have a pre build event that clears all the generated pdbs away so you dont run out of space.
			- You need two separate dlls, one that vs builds that you then copy and link into with your program.
			- Z7 instead of Zi or ZI to avoid having multiple pdb files that you need to update (think you can still use these but it becomes more tedious)

			Now why would we want this ? Now if we only change the logic on the app side of the exe we can just recompile and few the results, this is extremly powerful!
		
